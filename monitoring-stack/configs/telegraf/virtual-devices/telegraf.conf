[agent]
  interval = "5s"          # Collect metrics every 5s to match Prometheus scrape
  round_interval = true    # Align collection to interval boundaries
  metric_batch_size = 1000 # Batch size for outputs
  metric_buffer_limit = 10000 # Buffer if Prometheus scrapes fail
  collection_jitter = "0s" # For hardware metrics, precision matters more than staggering
  flush_interval = "5s"    # Match collection interval
  flush_jitter = "0s"      # Consistent timing for hardware metrics
  precision = "0s"         # Full precision for timestamps
  debug = false            # Disable for production
  quiet = false            # Standard logging
  logfile = ""             # Log to syslog/systemd by default
  hostname = ""            # Use system hostname
  omit_hostname = false    # Include hostname in metrics

# Prometheus-compatible output with retry logic
[[outputs.prometheus_client]]
  listen = ":9273"
  path = "/metrics"
  expiration_interval = "120s"
  metric_version = 2
  
[[inputs.cgroup]]
  name_prefix = "container_"  
  paths = ["/sys/fs/cgroup/"]

  files = [
    "cpu.idle",
    "cpu.stat",
    "memory.max",
    "memory.current",
    "memory.swap.max",
    "memory.swap.current",
    "io.stat",
    "cpu.pressure",
    "io.pressure"
  ]
  fieldinclude = ["*cpu.idle*", "*user_usec*", "*system_usec*",  "memory.current",  "memory.max",  "memory.swap.current",  "memory.swap.max", "*rbytes*", "*wbytes*", "*cpu.pressure*", "*io.pressure*"]

[[inputs.net]]
  name_prefix = "container_"
  interfaces = ["eth0"]
  fieldinclude = ["bytes_recv", "bytes_sent", "drop_out", "drop_in", "err_in", "err_out", "*packets_recv*", "*packets_sent*"]

[[inputs.processes]] 
  name_prefix = "container_"
  fieldinclude = ["running", "sleeping", "total", "zombies"]
