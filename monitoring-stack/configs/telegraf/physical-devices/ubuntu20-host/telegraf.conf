#Edit the file here, then copy it with root permissions to /etc/telegraf/telegraf.conf
#Example 
#sudo cp ./configs/telegraf/physical-devices/ubuntu20-host/telegraf.conf /etc/telegraf/telegraf.conf

#Enable telegraf to start on boot -> sudo systemctl enable telegraf
#verify if it's enabled -> sudo systemctl is-enabled telegraf

#IMPORTANT -> REMEMBER TO ALLOW TELEGRAF PORT THROUGH FIREWALL!!!

#starting telegraf - sudo systemctl start telegraf

#verify telegraf status - sudo systemctl status telegraf

#test telegraf => sudo telegraf --config /etc/telegraf/telegraf.conf --test

#restarting telegraf - sudo systemctl restart telegraf

#Run this after every update on this file:
#sudo cp ./configs/telegraf/physical-devices/ubuntu20-host/telegraf.conf /etc/telegraf/telegraf.conf && sudo systemctl restart telegraf


# Global Agent Configuration
[agent]
  interval = "5s"          # Collect metrics every 5s to match Prometheus scrape
  round_interval = true    # Align collection to interval boundaries
  metric_batch_size = 1000 # Batch size for outputs
  metric_buffer_limit = 10000 # Buffer if Prometheus scrapes fail
  collection_jitter = "0s" # For hardware metrics, precision matters more than staggering
  flush_interval = "5s"    # Match collection interval
  flush_jitter = "0s"      # Consistent timing for hardware metrics
  precision = "0s"         # Full precision for timestamps
  debug = false            # Disable for production
  quiet = false            # Standard logging
  logfile = ""             # Log to syslog/systemd by default
  hostname = ""            # Use system hostname
  omit_hostname = false    # Include hostname in metrics

# Prometheus-compatible output with retry logic
[[outputs.prometheus_client]]
  listen = ":9273"
  path = "/metrics"
  expiration_interval = "120s"  # Increased from 60s
  metric_version = 2


####CPU Metrics####
[[inputs.cpu]]
  name_prefix = "physical_"
  fieldinclude = ["usage_user", "usage_iowait", "usage_system", "usage_idle"]

####Memory Metrics####
[[inputs.mem]]
  name_prefix = "physical_"
  fieldinclude = ["used", "total", "swap_free", "swap_total"]

###Disk Metrics####
[[inputs.disk]]
  name_prefix = "physical_"
  fieldinclude = ["free", "used", "total", "inodes_free"]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs", "nsfs"]

[[processors.rename]]
  namepass = ["physical_disk"]
  [[processors.rename.replace]]
    tag = "device"
    dest = "disk_partition"


[[inputs.diskio]]
  name_prefix = "physical_"
  fieldinclude = ["read_bytes", "write_bytes", "io_time", "io_util"]
  devices = ["sd*"]

[[processors.rename]]
  namepass = ["physical_diskio"]
  [[processors.rename.replace]]
    tag = "name"
    dest = "disk_partition"

###Network Metrics####
[[inputs.net]]
  name_prefix = "physical_"
  interfaces = ["wlp2s0"]
  fieldinclude = ["bytes_recv", "bytes_sent", "drop_out", "drop_in", "err_in", "err_out", "*packets_recv*", "*packets_sent*"]

####Processes Metrics####
[[inputs.processes]] #System-wide process statistics
  name_prefix = "physical_"
  fieldinclude = ["running", "sleeping", "total", "zombies"]

#   ###Docker Metrics####
# [[inputs.docker]]
#   endpoint = "unix:///var/run/docker.sock"

#   ## Set to true to collect Swarm metrics, false to disable
#   gather_services = false


#   ## Set the source tag for the metrics to the container ID hostname, eg first 12 chars
#   source_tag = false

#   ## Containers to include and exclude. Globs accepted.
#   ## Note that an empty array for both will include all containers
#   container_name_include = []
#   container_name_exclude = []

#   ## Container states to include and exclude. Globs accepted.
#   ## When empty only containers in the "running" state will be captured.
#   # container_state_include = []
#   # container_state_exclude = []

#   ## Timeout for docker list, info, and stats commands
#   timeout = "5s"

#   ## Whether to report for each container per-device blkio (8:0, 8:1...),
#   ## network (eth0, eth1, ...) and cpu (cpu0, cpu1, ...) stats or not
#   perdevice = true

#   ## Whether to report for each container total blkio and network stats or not
#   total = false

#   ## docker labels to include and exclude as tags.  Globs accepted.
#   ## Note that an empty array for both will include all labels as tags
#   docker_label_include = []
#   docker_label_exclude = []

#   ## Which environment variables should we use as a tag
#   # tag_env = ["JAVA_HOME", "HEAP_SIZE"]

#   ## Optional TLS Config
#   # tls_ca = "/etc/telegraf/ca.pem"
#   # tls_cert = "/etc/telegraf/cert.pem"
#   # tls_key = "/etc/telegraf/key.pem"
#   ## Use TLS but skip chain & host verification
#   # insecure_skip_verify = false
