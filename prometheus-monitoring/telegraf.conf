# Global Agent Configuration
[agent]
  interval = "30s"
  round_interval = true
  metric_batch_size = 500  # Reduced from 1000
  metric_buffer_limit = 5000  # Reduced from 10000
  collection_jitter = "5s"  # Added jitter
  flush_interval = "30s"
  flush_jitter = "5s"  # Added jitter
  precision = ""
  debug = true  # Enable debug logging
  quiet = false
  logtarget = "stderr"
  hostname = ""
  omit_hostname = false

# Prometheus-compatible output with retry logic
[[outputs.prometheus_client]]
  listen = ":9273"
  path = "/metrics"
  expiration_interval = "120s"  # Increased from 60s
  metric_version = 2
  
####Memory metrics####
[[inputs.exec]]
  name_override = "container_memory_limit_bytes"
  commands = ["cat /sys/fs/cgroup/memory.max"]
  data_format = "value"
  data_type = "integer"
  timeout = "5s"

[[inputs.exec]]
  name_override = "container_memory_usage_bytes"
  commands = ["cat /sys/fs/cgroup/memory.current"]
  data_format = "value"
  data_type = "integer"
  timeout = "5s"

# [[inputs.exec]]
#   name_override = "container_memory_stat_bytes"
#   commands = ["cat /sys/fs/cgroup/memory.stat"]
#   data_format = "prometheus"
#   data_type = "integer"
#   timeout = "5s"

[[inputs.exec]]
  name_override = "container_memory_peak_bytes"
  commands = ["cat /sys/fs/cgroup/memory.peak"]
  data_format = "value"
  data_type = "integer"
  timeout = "5s"
  
[[inputs.exec]]
  name_override = "container_memory_swap_current_bytes"
  commands = ["cat /sys/fs/cgroup/memory.swap.current"]
  data_format = "value"
  data_type = "integer"
  timeout = "5s"

[[inputs.exec]]
  name_override = "container_memory_swap_max_bytes"
  commands = ["cat /sys/fs/cgroup/memory.swap.max"]
  data_format = "value"
  data_type = "integer"
  timeout = "5s"

[[inputs.exec]]
  name_override = "container_memory_pressure"
  commands = ["cat /sys/fs/cgroup/memory.pressure"]
  data_format = "grok"
  grok_patterns = ["%{WORD:pressure_type} avg10=%{NUMBER:avg10:float} avg60=%{NUMBER:avg60:float} avg300=%{NUMBER:avg300:float} total=%{NUMBER:total:int}"]  timeout = "5s"

####CPU metrics####
[[inputs.exec]]
  name_override = "container_cpu_stat"
  commands = ["cat /sys/fs/cgroup/cpu.stat"]
  data_format = "grok"
  grok_patterns = ["%{WORD:metric_name} %{NUMBER:value:int}"]
  timeout = "5s"

[[inputs.exec]]
  name_override = "container_cpu_pressure"
  commands = ["cat /sys/fs/cgroup/cpu.pressure"]
  data_format = "grok"
  grok_patterns = ["%{WORD:pressure_type} avg10=%{NUMBER:avg10:float} avg60=%{NUMBER:avg60:float} avg300=%{NUMBER:avg300:float} total=%{NUMBER:total:int}"]    timeout = "5s"

####Disk I/O metrics####

[[inputs.exec]]
  name_override = "container_io_stat"
  commands = ["cat /sys/fs/cgroup/io.stat"]
  data_format = "grok"
  grok_patterns = ['%{NUMBER:device_major:int}:%{NUMBER:int} rbytes=%{NUMBER:read_bytes:int} wbytes=%{NUMBER:write_bytes:int} rios=%{NUMBER:read_ios:int} wios=%{NUMBER:write_ios:int} dbytes=%{NUMBER:discard_bytes:int} dios=%{NUMBER:discard_ios:int}']
  timeout = "5s"

[[inputs.exec]]
  name_override = "container_io_pressure"
  commands = ["cat /sys/fs/cgroup/io.pressure"]
  data_format = "grok"
  grok_patterns = ["%{WORD:pressure_type} avg10=%{NUMBER:avg10:float} avg60=%{NUMBER:avg60:float} avg300=%{NUMBER:avg300:float} total=%{NUMBER:total:int}"]      timeout = "5s"

####Network metrics####